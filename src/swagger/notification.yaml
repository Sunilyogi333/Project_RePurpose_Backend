tags:
  - name: 'Notifications'
    description: 'Operations related to managing notifications for users (stores).'

paths:
  /notifications:
    post:
      summary: Create a new notification
      description: Sends a new notification to stores when a new product is created.
      operationId: createNotification
      tags:
        - Notifications
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: The message content of the notification.
                  example: "New product added: Kids Shirt"
                productId:
                  type: string
                  description: The ID of the product associated with the notification.
                  example: "60a781d450df6f001234abcd"
                userIds:
                  type: array
                  items:
                    type: string
                  description: The list of user IDs to send the notification to.
                  example: ["60a781d450df6f001234abcd", "60a781d450df6f001234efgh"]
      responses:
        '201':
          description: Successfully sent notifications
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Notifications sent successfully"
        '400':
          description: Invalid input
        '500':
          description: Internal server error

  /notifications/{userId}:
    get:
      summary: Get notifications for a user (store)
      description: Retrieves all notifications for a specific user (store).
      operationId: getNotificationsForUser
      tags:
        - Notifications
      parameters:
        - name: userId
          in: path
          required: true
          description: The ID of the user (store) to get notifications for.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully fetched notifications
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: "60a781d450df6f001234abcd"
                    message:
                      type: string
                      example: "New product added: Kids Shirt"
                    read:
                      type: boolean
                      example: false
                    createdAt:
                      type: string
                      format: date-time
                      example: "2025-01-21T14:52:23Z"
        '404':
          description: Notifications not found
        '500':
          description: Internal server error

  /notifications/{notificationId}/read:
    patch:
      summary: Mark a notification as read
      description: Marks a specific notification as read.
      operationId: markAsRead
      tags:
        - Notifications
      parameters:
        - name: notificationId
          in: path
          required: true
          description: The ID of the notification to mark as read.
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully marked notification as read
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Notification marked as read"
        '404':
          description: Notification not found
        '500':
          description: Internal server error
