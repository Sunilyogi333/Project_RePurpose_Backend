tags:
  - name: 'Products'
    description: 'Operations related to managing products in the thrift store'

paths:
  /products:
    get:
      summary: Get all products
      description: Retrieves a list of all available products.
      operationId: getAllProducts
      tags:
        - Products
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully fetched all products
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'

  /products/{id}:
    get:
      summary: Get product by ID
      description: Fetches a specific product by its unique identifier.
      operationId: getProductById
      tags:
        - Products
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the product to fetch.
      responses:
        '200':
          description: Successfully fetched the product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string

    put:
      summary: Update product by ID
      description: Allows the update of an existing product's details.
      operationId: updateProduct
      tags:
        - Products
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the product to update.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: number
                  format: float
                category:
                  type: string
                partName:
                  type: string
                materialName:
                  type: string
                ecoFriendly:
                  type: boolean
                retainedImages:
                  type: array
                  items:
                    type: string
                  description: List of image URLs to retain
                removedImages:
                  type: array
                  items:
                    type: string
                  description: List of image URLs to remove
                images:
                  type: array
                  items:
                    type: string
                  description: New image URLs to upload
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string

    delete:
      summary: Delete product by ID
      description: Deletes a specific product using its ID.
      operationId: deleteProduct
      tags:
        - Products
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the product to delete.
      responses:
        '200':
          description: Product deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string

  /products/reward-points:
    post:
      summary: Calculate reward points
      description: Calculate reward points based on product attributes.
      operationId: calculateRewardPoints
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                part_name:
                  type: string
                material:
                  type: string
                eco_friendly:
                  type: boolean
                item_price:
                  type: number
                  format: float
      responses:
        '200':
          description: Reward points calculated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  rewardPoints:
                    type: integer
        '400':
          description: Missing required fields or invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
